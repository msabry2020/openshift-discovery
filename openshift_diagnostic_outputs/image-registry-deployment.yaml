apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    imageregistry.operator.openshift.io/checksum: sha256:06474900b7648d157c649f33698ad315ea13198ccfe90a1e65e992d8bf933ce5
    operator.openshift.io/spec-hash: 436e8e9c24395588f59299f118bf4040aad717139a79f3862c89193624c9b043
    release.openshift.io/version: 4.16.2
  creationTimestamp: "2024-11-02T15:39:57Z"
  generation: 3
  labels:
    docker-registry: default
  name: image-registry
  namespace: openshift-image-registry
  resourceVersion: "269415"
  uid: 65ef4fc2-79e9-4270-9e27-1d92d25f3a14
spec:
  progressDeadlineSeconds: 60
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      docker-registry: default
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        imageregistry.operator.openshift.io/dependencies-checksum: sha256:a791d7c098b0995582ce0f341ed2f4cf8f23a43f59dabb6b39de9b5502d74d68
        openshift.io/required-scc: restricted-v2
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        docker-registry: default
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - mkdir -p /etc/pki/ca-trust/extracted/edk2 /etc/pki/ca-trust/extracted/java
          /etc/pki/ca-trust/extracted/openssl /etc/pki/ca-trust/extracted/pem && update-ca-trust
          extract && exec /usr/bin/dockerregistry
        env:
        - name: REGISTRY_STORAGE
          value: filesystem
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /registry
        - name: REGISTRY_HTTP_ADDR
          value: :5000
        - name: REGISTRY_HTTP_NET
          value: tcp
        - name: REGISTRY_HTTP_SECRET
          value: 4d72a1749c3a51d2b35f29ce143e31fb6b3916b8c7ea0c49641980e320a58ca10645f3cbe98a19056525e1f768ebb6223db5d3389efdeb70fb282bb1a0812e9f
        - name: REGISTRY_LOG_LEVEL
          value: info
        - name: REGISTRY_OPENSHIFT_QUOTA_ENABLED
          value: "true"
        - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
          value: inmemory
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        - name: REGISTRY_HEALTH_STORAGEDRIVER_ENABLED
          value: "true"
        - name: REGISTRY_HEALTH_STORAGEDRIVER_INTERVAL
          value: 10s
        - name: REGISTRY_HEALTH_STORAGEDRIVER_THRESHOLD
          value: "1"
        - name: REGISTRY_OPENSHIFT_METRICS_ENABLED
          value: "true"
        - name: REGISTRY_OPENSHIFT_SERVER_ADDR
          value: image-registry.openshift-image-registry.svc:5000
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /etc/secrets/tls.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /etc/secrets/tls.key
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:29ff7c37702007f0f2bb3104e82cfc0c494adaf314bb46053c46944358b98489
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "25"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 5000
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: registry
        ports:
        - containerPort: 5000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 5000
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /registry
          name: registry-storage
        - mountPath: /etc/secrets
          name: registry-tls
        - mountPath: /etc/pki/ca-trust/extracted
          name: ca-trust-extracted
        - mountPath: /etc/pki/ca-trust/source/anchors
          name: registry-certificates
        - mountPath: /usr/share/pki/ca-trust-source
          name: trusted-ca
        - mountPath: /var/lib/kubelet/
          name: installation-pull-secrets
        - mountPath: /var/run/secrets/openshift/serviceaccount
          name: bound-sa-token
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000310000
        fsGroupChangePolicy: OnRootMismatch
      serviceAccount: registry
      serviceAccountName: registry
      terminationGracePeriodSeconds: 55
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            docker-registry: default
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
      - labelSelector:
          matchLabels:
            docker-registry: default
        maxSkew: 1
        topologyKey: node-role.kubernetes.io/worker
        whenUnsatisfiable: DoNotSchedule
      volumes:
      - name: registry-storage
        persistentVolumeClaim:
          claimName: registry-claim
      - name: registry-tls
        projected:
          defaultMode: 420
          sources:
          - secret:
              name: image-registry-tls
      - emptyDir: {}
        name: ca-trust-extracted
      - configMap:
          defaultMode: 420
          name: image-registry-certificates
        name: registry-certificates
      - configMap:
          defaultMode: 420
          items:
          - key: ca-bundle.crt
            path: anchors/ca-bundle.crt
          name: trusted-ca
          optional: true
        name: trusted-ca
      - name: installation-pull-secrets
        secret:
          defaultMode: 420
          items:
          - key: .dockerconfigjson
            path: config.json
          optional: true
          secretName: installation-pull-secrets
      - name: bound-sa-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: openshift
              expirationSeconds: 3600
              path: token
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-11-02T15:39:57Z"
    lastUpdateTime: "2024-11-02T16:17:39Z"
    message: ReplicaSet "image-registry-74968dff6" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-07-15T11:28:24Z"
    lastUpdateTime: "2025-07-15T11:28:24Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
